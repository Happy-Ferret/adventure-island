// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/game.proto

// Web exposes a backend server over gRPC.

package server

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type EntityType int32

const (
	EntityType_UNKNOWN   EntityType = 0
	EntityType_COIN      EntityType = 1
	EntityType_SCORE     EntityType = 2
	EntityType_CHARACTER EntityType = 3
	EntityType_EMPTY     EntityType = 4
)

var EntityType_name = map[int32]string{
	0: "UNKNOWN",
	1: "COIN",
	2: "SCORE",
	3: "CHARACTER",
	4: "EMPTY",
}

var EntityType_value = map[string]int32{
	"UNKNOWN":   0,
	"COIN":      1,
	"SCORE":     2,
	"CHARACTER": 3,
	"EMPTY":     4,
}

func (x EntityType) String() string {
	return proto.EnumName(EntityType_name, int32(x))
}

func (EntityType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_5309ac3f9cbe5f84, []int{0}
}

// Define the package locations the generated files will go into
type Empty struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Empty) Reset()         { *m = Empty{} }
func (m *Empty) String() string { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()    {}
func (*Empty) Descriptor() ([]byte, []int) {
	return fileDescriptor_5309ac3f9cbe5f84, []int{0}
}

func (m *Empty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Empty.Unmarshal(m, b)
}
func (m *Empty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Empty.Marshal(b, m, deterministic)
}
func (m *Empty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Empty.Merge(m, src)
}
func (m *Empty) XXX_Size() int {
	return xxx_messageInfo_Empty.Size(m)
}
func (m *Empty) XXX_DiscardUnknown() {
	xxx_messageInfo_Empty.DiscardUnknown(m)
}

var xxx_messageInfo_Empty proto.InternalMessageInfo

type NewPlayerResponse struct {
	ID                   *Entity  `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NewPlayerResponse) Reset()         { *m = NewPlayerResponse{} }
func (m *NewPlayerResponse) String() string { return proto.CompactTextString(m) }
func (*NewPlayerResponse) ProtoMessage()    {}
func (*NewPlayerResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_5309ac3f9cbe5f84, []int{1}
}

func (m *NewPlayerResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NewPlayerResponse.Unmarshal(m, b)
}
func (m *NewPlayerResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NewPlayerResponse.Marshal(b, m, deterministic)
}
func (m *NewPlayerResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NewPlayerResponse.Merge(m, src)
}
func (m *NewPlayerResponse) XXX_Size() int {
	return xxx_messageInfo_NewPlayerResponse.Size(m)
}
func (m *NewPlayerResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_NewPlayerResponse.DiscardUnknown(m)
}

var xxx_messageInfo_NewPlayerResponse proto.InternalMessageInfo

func (m *NewPlayerResponse) GetID() *Entity {
	if m != nil {
		return m.ID
	}
	return nil
}

type NewPlayerRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NewPlayerRequest) Reset()         { *m = NewPlayerRequest{} }
func (m *NewPlayerRequest) String() string { return proto.CompactTextString(m) }
func (*NewPlayerRequest) ProtoMessage()    {}
func (*NewPlayerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_5309ac3f9cbe5f84, []int{2}
}

func (m *NewPlayerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NewPlayerRequest.Unmarshal(m, b)
}
func (m *NewPlayerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NewPlayerRequest.Marshal(b, m, deterministic)
}
func (m *NewPlayerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NewPlayerRequest.Merge(m, src)
}
func (m *NewPlayerRequest) XXX_Size() int {
	return xxx_messageInfo_NewPlayerRequest.Size(m)
}
func (m *NewPlayerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_NewPlayerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_NewPlayerRequest proto.InternalMessageInfo

type Entity struct {
	ID                   string     `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Type                 EntityType `protobuf:"varint,2,opt,name=Type,proto3,enum=game.EntityType" json:"Type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Entity) Reset()         { *m = Entity{} }
func (m *Entity) String() string { return proto.CompactTextString(m) }
func (*Entity) ProtoMessage()    {}
func (*Entity) Descriptor() ([]byte, []int) {
	return fileDescriptor_5309ac3f9cbe5f84, []int{3}
}

func (m *Entity) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Entity.Unmarshal(m, b)
}
func (m *Entity) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Entity.Marshal(b, m, deterministic)
}
func (m *Entity) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Entity.Merge(m, src)
}
func (m *Entity) XXX_Size() int {
	return xxx_messageInfo_Entity.Size(m)
}
func (m *Entity) XXX_DiscardUnknown() {
	xxx_messageInfo_Entity.DiscardUnknown(m)
}

var xxx_messageInfo_Entity proto.InternalMessageInfo

func (m *Entity) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *Entity) GetType() EntityType {
	if m != nil {
		return m.Type
	}
	return EntityType_UNKNOWN
}

type World struct {
	Entities             []*Entity `protobuf:"bytes,1,rep,name=entities,proto3" json:"entities,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *World) Reset()         { *m = World{} }
func (m *World) String() string { return proto.CompactTextString(m) }
func (*World) ProtoMessage()    {}
func (*World) Descriptor() ([]byte, []int) {
	return fileDescriptor_5309ac3f9cbe5f84, []int{4}
}

func (m *World) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_World.Unmarshal(m, b)
}
func (m *World) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_World.Marshal(b, m, deterministic)
}
func (m *World) XXX_Merge(src proto.Message) {
	xxx_messageInfo_World.Merge(m, src)
}
func (m *World) XXX_Size() int {
	return xxx_messageInfo_World.Size(m)
}
func (m *World) XXX_DiscardUnknown() {
	xxx_messageInfo_World.DiscardUnknown(m)
}

var xxx_messageInfo_World proto.InternalMessageInfo

func (m *World) GetEntities() []*Entity {
	if m != nil {
		return m.Entities
	}
	return nil
}

func init() {
	proto.RegisterEnum("game.EntityType", EntityType_name, EntityType_value)
	proto.RegisterType((*Empty)(nil), "game.Empty")
	proto.RegisterType((*NewPlayerResponse)(nil), "game.NewPlayerResponse")
	proto.RegisterType((*NewPlayerRequest)(nil), "game.NewPlayerRequest")
	proto.RegisterType((*Entity)(nil), "game.Entity")
	proto.RegisterType((*World)(nil), "game.World")
}

func init() { proto.RegisterFile("proto/game.proto", fileDescriptor_5309ac3f9cbe5f84) }

var fileDescriptor_5309ac3f9cbe5f84 = []byte{
	// 330 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x91, 0xcf, 0x6b, 0xc2, 0x50,
	0x0c, 0xc7, 0x6d, 0xad, 0x3f, 0x1a, 0x37, 0x79, 0xcb, 0x61, 0x13, 0xd9, 0x41, 0x1e, 0x63, 0xc8,
	0x60, 0x16, 0xdd, 0x5d, 0xd0, 0x5a, 0xa6, 0x8c, 0x55, 0xa9, 0x0e, 0xd9, 0x6e, 0xd5, 0x06, 0x57,
	0xd4, 0xb6, 0xb6, 0x4f, 0x47, 0xff, 0xfb, 0xd1, 0x56, 0x9c, 0xcc, 0x5b, 0x92, 0x4f, 0xbe, 0x79,
	0xf9, 0xe6, 0x01, 0x0b, 0x42, 0x5f, 0xf8, 0xda, 0xca, 0xde, 0x52, 0x2b, 0x0d, 0x51, 0x49, 0x62,
	0x5e, 0x82, 0x82, 0xb1, 0x0d, 0x44, 0xcc, 0xdb, 0x70, 0x63, 0xd2, 0xcf, 0x64, 0x63, 0xc7, 0x14,
	0x5a, 0x14, 0x05, 0xbe, 0x17, 0x11, 0xde, 0x83, 0x3c, 0x1a, 0xd4, 0xa4, 0x86, 0xd4, 0xac, 0x74,
	0xae, 0x5a, 0xa9, 0xd8, 0xf0, 0x84, 0x2b, 0x62, 0x4b, 0x1e, 0x0d, 0x38, 0x02, 0x3b, 0x93, 0xec,
	0xf6, 0x14, 0x09, 0xde, 0x85, 0x62, 0xd6, 0x81, 0xd5, 0x93, 0x56, 0x4d, 0xba, 0xf1, 0x01, 0x94,
	0x59, 0x1c, 0x50, 0x4d, 0x6e, 0x48, 0xcd, 0x6a, 0x87, 0x9d, 0x4f, 0x4b, 0xea, 0x56, 0x4a, 0x79,
	0x1b, 0x0a, 0x73, 0x3f, 0xdc, 0x38, 0xd8, 0x84, 0x32, 0x25, 0xd0, 0xa5, 0xa8, 0x26, 0x35, 0xf2,
	0x17, 0x0b, 0x9c, 0xe8, 0xd3, 0x10, 0xe0, 0x6f, 0x0c, 0x56, 0xa0, 0xf4, 0x61, 0xbe, 0x99, 0xe3,
	0xb9, 0xc9, 0x72, 0x58, 0x06, 0x45, 0x1f, 0x8f, 0x4c, 0x26, 0xa1, 0x0a, 0x85, 0xa9, 0x3e, 0xb6,
	0x0c, 0x26, 0xe3, 0x35, 0xa8, 0xfa, 0xb0, 0x67, 0xf5, 0xf4, 0x99, 0x61, 0xb1, 0x7c, 0x42, 0x8c,
	0xf7, 0xc9, 0xec, 0x93, 0x29, 0x9d, 0x1d, 0x94, 0xfa, 0xf6, 0x72, 0x4d, 0x9e, 0x83, 0x5d, 0x50,
	0x4f, 0xde, 0xf0, 0x36, 0x7b, 0xf9, 0xbf, 0xd9, 0xfa, 0xdd, 0x45, 0x3d, 0xbb, 0x1b, 0xcf, 0xe1,
	0x23, 0x94, 0x5f, 0x49, 0x4c, 0x85, 0x2d, 0x08, 0x2b, 0xc7, 0xc5, 0x93, 0x3b, 0xd7, 0x8f, 0x49,
	0x6a, 0x92, 0xe7, 0xfa, 0xed, 0x2f, 0x6d, 0xe5, 0x8a, 0xef, 0xfd, 0xa2, 0xb5, 0xf4, 0xb7, 0xda,
	0x3a, 0x26, 0x12, 0x42, 0xb3, 0x9d, 0x03, 0x79, 0x62, 0x1f, 0xd2, 0xb3, 0x1b, 0x6d, 0x6c, 0xcf,
	0xd1, 0xb2, 0xcf, 0x8b, 0x28, 0x3c, 0x50, 0xb8, 0x28, 0xa6, 0xd9, 0xcb, 0x6f, 0x00, 0x00, 0x00,
	0xff, 0xff, 0xdb, 0xf4, 0x87, 0x1c, 0xd3, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// BackendClient is the client API for Backend service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type BackendClient interface {
	NewPlayer(ctx context.Context, in *NewPlayerRequest, opts ...grpc.CallOption) (*NewPlayerResponse, error)
	GetState(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*World, error)
}

type backendClient struct {
	cc *grpc.ClientConn
}

func NewBackendClient(cc *grpc.ClientConn) BackendClient {
	return &backendClient{cc}
}

func (c *backendClient) NewPlayer(ctx context.Context, in *NewPlayerRequest, opts ...grpc.CallOption) (*NewPlayerResponse, error) {
	out := new(NewPlayerResponse)
	err := c.cc.Invoke(ctx, "/game.Backend/NewPlayer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *backendClient) GetState(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*World, error) {
	out := new(World)
	err := c.cc.Invoke(ctx, "/game.Backend/GetState", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// BackendServer is the server API for Backend service.
type BackendServer interface {
	NewPlayer(context.Context, *NewPlayerRequest) (*NewPlayerResponse, error)
	GetState(context.Context, *Empty) (*World, error)
}

func RegisterBackendServer(s *grpc.Server, srv BackendServer) {
	s.RegisterService(&_Backend_serviceDesc, srv)
}

func _Backend_NewPlayer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NewPlayerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BackendServer).NewPlayer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/game.Backend/NewPlayer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BackendServer).NewPlayer(ctx, req.(*NewPlayerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Backend_GetState_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BackendServer).GetState(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/game.Backend/GetState",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BackendServer).GetState(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _Backend_serviceDesc = grpc.ServiceDesc{
	ServiceName: "game.Backend",
	HandlerType: (*BackendServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "NewPlayer",
			Handler:    _Backend_NewPlayer_Handler,
		},
		{
			MethodName: "GetState",
			Handler:    _Backend_GetState_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/game.proto",
}
